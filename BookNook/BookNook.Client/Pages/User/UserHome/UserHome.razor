@page "/userHome/index"
@using BookNook.Client.Layout
@layout UserLayout
@rendermode InteractiveWebAssembly
@using BookNook.Client.Models;
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JsRuntime

<style>
    /* 标题样式 */
    .section-title {
        font-size: 24px;
        font-weight: 600;
        margin: 20px 0;
        text-align: center;
    }

    /* 产品列表容器样式 */
    .product-list {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        padding: 20px;
        width: 80%;
        margin: 0 auto;
    }

    /* 单个产品卡片样式 */
    .product-card {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: transform 0.3s ease;
    }

        .product-card:hover {
            transform: translateY(-5px);
        }

    /* 产品图片样式 */
    .product-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    /* 产品信息容器样式 */
    .product-info {
        padding: 20px;
    }

    /* 产品名称样式 */
    .product-name {
        font-size: 20px;
        font-weight: 600;
        margin-bottom: 10px;
    }

    /* 产品描述样式 */
    .product-description {
        font-size: 14px;
        color: #666;
        margin-bottom: 10px;
    }

    /* 产品价格样式 */
    .product-price {
        font-size: 18px;
        font-weight: 600;
        color: #e74c3c;
    }

    /* 原价样式 */
    .original-price {
        text-decoration: line-through;
        color: #999;
        margin-right: 10px;
    }

    /* 产品类型样式 */
    .product-type {
        font-size: 14px;
        color: #666;
        margin-bottom: 5px;
    }
</style>

<h2 class="section-title">Hot Selling Products</h2>
<div class="product-list">
    @foreach (var product in hotSellingProducts)
    {
        <div class="product-card" @onclick="@(() => NavigateToProductDetail(product.Id))">
            <img class="product-image" src="/images/@product.ImagePath" alt="@product.Name" />
            <div class="product-info">
                <h3 class="product-name">@product.Name</h3>
                <p class="product-type">Type: @product.ItemTypeName</p>
                <p class="product-description">@product.Description</p>
                <p>
                    @if (@product.PromotionId == 0)
                    {
                        <span class="product-price">$@product.Price</span>
                    }
                    else
                    {
                        <span class="original-price">$@product.Price</span>
                        <span class="product-price">$@product.DiscountedPrice</span>
                    }
                </p>
            </div>
        </div>
    }


</div>

<h2 class="section-title">Promotional Products</h2>
<div class="product-list">

    @foreach (var product in promotionalProducts)
    {
        <div class="product-card" @onclick="@(() => NavigateToProductDetail(product.Id))">
            <img class="product-image" src="/images/@product.ImagePath" alt="@product.Name" />
            <div class="product-info">
                <h3 class="product-name">@product.Name</h3>
                <p class="product-type">Type: @product.ItemTypeName</p>
                <p class="product-description">@product.Description</p>
                <p>
                    @if (@product.PromotionId == 0)
                    {
                        <span class="product-price">$@product.Price</span>
                    }
                    else
                    {
                        <span class="original-price">$@product.Price</span>
                        <span class="product-price">$@product.DiscountedPrice</span>
                    }
                    
                </p>
            </div>
        </div>
    }

</div>


@code {
    private List<Item> hotSellingProducts = new List<Item>();
    private List<Item> promotionalProducts = new List<Item>();
    
    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }
    private async Task LoadProducts()
    {
        hotSellingProducts = await Http.GetFromJsonAsync<List<Item>>($"api/Item/GetHotSellingProducts");
        promotionalProducts = await Http.GetFromJsonAsync<List<Item>>($"api/Item/GetPromotionalProducts");
    }

    private void NavigateToProductDetail(int productId)
    {
        Navigation.NavigateTo($"/userItem/itemDetail/{productId}?type=home");
    }
}
