@page "/comment/index"
@using BookNook.Client.Layout
@layout AdminLayout
@rendermode InteractiveWebAssembly
@using BookNook.Client.Models;
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JsRuntime

<style>
    .product-type-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

        .product-type-container h3 {
            color: #333;
            font-size: 24px;
            margin-bottom: 20px;
        }

    .product-type-table {
        width: 100%;
        border-collapse: collapse;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }

        .product-type-table th,
        .product-type-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .product-type-table th {
            background-color: #f2f2f2;
            color: #333;
        }

        .product-type-table tr:hover {
            background-color: #f5f5f5;
        }

        .product-type-table img {
            display: block;
            max-width: 100px;
            max-height: 100px;
            object-fit: contain;
            border-radius: 5px;
        }
</style>

<div class="product-type-container">
    <h3>Comments</h3>

    <table class="product-type-table">
        <thead>
            <tr>
                <th>Image</th>
                <th>Item Name</th>
                <th>Rating</th>
                <th>Comment</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td>
                        <img src="/images/@item.image" alt="Item Image" style="max-width: 100px; max-height: 100px;" />
                    </td>
                    <td>@item.ItemName</td>
                    <td>@item.Rating</td>
                    <td>@item.Comment</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<Review> items = new List<Review>();

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        items = await Http.GetFromJsonAsync<List<Review>>($"api/Comment/GetReview");
    }
}
