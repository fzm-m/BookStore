@page "/membershipLevel/index"
@using BookNook.Client.Layout
@layout AdminLayout
@rendermode InteractiveWebAssembly
@using BookNook.Client.Models;
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JsRuntime

<style>
    .product-type-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

        .product-type-container h3 {
            color: #333;
            font-size: 24px;
            margin-bottom: 20px;
        }

    .create-button {
        background-color: #28a745;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin-bottom: 20px;
        transition: background-color 0.3s ease;
    }

        .create-button:hover {
            background-color: #218838;
        }

    .product-type-table {
        width: 100%;
        border-collapse: collapse;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }

        .product-type-table th,
        .product-type-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .product-type-table th {
            background-color: #f2f2f2;
            color: #333;
        }

        .product-type-table tr:hover {
            background-color: #f5f5f5;
        }

    .action-button {
        padding: 8px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-right: 5px;
    }

    .edit-button {
        background-color: #007bff;
        color: white;
    }

        .edit-button:hover {
            background-color: #0069d9;
        }

    .delete-button {
        background-color: #dc3545;
        color: white;
    }

        .delete-button:hover {
            background-color: #c82333;
        }

    .pagination-container {
        margin-top: 20px;
        display: flex;
        justify-content: center;
    }

    .pagination-button {
        background-color: #f8f9fa;
        color: #333;
        padding: 10px 15px;
        border: 1px solid #ddd;
        margin: 0 5px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .pagination-button:disabled {
            background-color: #e9ecef;
            color: #6c757d;
            cursor: not-allowed;
        }

        .pagination-button:hover:not(:disabled) {
            background-color: #e2e6ea;
        }
</style>

<div class="product-type-container">
    <h3>MembershipLevel Management</h3>
    <button class="create-button" @onclick="NavigateToCreatePage">Create</button>
    <table class="product-type-table">
        <thead>
            <tr>
                <th>MembershipLevelName</th>
                <th>PayingPercentage</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var bean in beanList)
            {
                <tr>
                    <td>@bean.MembershipLevelName</td>
                    <td>@bean.DiscountRate</td>
                    <td>
                        <button class="action-button edit-button" @onclick="@(() => NavigateToEditPage(bean.Id))">Edit</button>
                        <button class="action-button delete-button" @onclick="@(() => Delete(bean.Id))">Delete</button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
</div>


@code {
    private List<MembershipLevel> beanList = new List<MembershipLevel>();


    protected override async Task OnInitializedAsync()
    {
        await LoadList();
    }
    private async Task LoadList()
    {
        beanList = await Http.GetFromJsonAsync<List<MembershipLevel>>($"api/MembershipLevel");
    }

    private void NavigateToEditPage(int id)
    {
        Navigation.NavigateTo($"/membershipLevel/editMembershipLevel/{id}");
    }

    private async Task Delete(int id)
    {
        var confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete it？");
        if (confirmed)
        {
            var response = await Http.DeleteAsync($"api/MembershipLevel/{id}");
            if (response.IsSuccessStatusCode)
            {
                await LoadList();
            }
        }

    }
    private void NavigateToCreatePage()
    {
        Navigation.NavigateTo("/membershipLevel/createMembershipLevel");
    }
}



