@page "/item/selectPromotion/{Id:int}"
@using BookNook.Client.Layout
@layout AdminLayout
@rendermode InteractiveWebAssembly
@using BookNook.Client.Models;
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JsRuntime


<style>
    /* 整体容器样式 */
    .edit-product-container {
    max-width: 400px;
    margin: 50px auto;
    padding: 30px;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* 标题样式 */
    .edit-product-container h3 {
    text-align: center;
    color: #333;
    font-size: 24px;
    margin-bottom: 20px;
    }

    /* 加载提示样式 */
    .loading-message {
    color: #999;
    font-size: 16px;
    text-align: center;
    }

    /* 表单组样式 */
    .form-group {
    margin-bottom: 20px;
    }

    .form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 600;
    color: #333;
    }

    .form-group input {
    width: 100%;
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
    transition: border-color 0.3s ease;
    }

    .form-group input:focus {
    border-color: #007BFF;
    outline: none;
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
    }

    /* 按钮样式 */
    button {
    padding: 12px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease;
    margin-right: 10px;
    }

    #submitButton{
    background-color: #007BFF;
    color: #fff;
    }

    #submitButton:hover {
    background-color: #0056b3;
    }

    button:not([type="submit"]) {
    background-color: #6c757d;
    color: #fff;
    }

    button:not([type="submit"]):hover {
    background-color: #5a6268;
    }

    /* 错误消息样式 */
    .error-message {
    margin-top: 20px;
    padding: 12px;
    background-color: #f8d7da;
    border: 1px solid #f5c6cb;
    border-radius: 5px;
    color: #721c24;
    text-align: center;
    }
</style>

<div class="edit-product-container">
    <h3>Promotion</h3>


    <div class="form-group">
        <label for="PromotionId">Promotion</label>

        <InputSelect id="PromotionId" @bind-Value="promotionId" class="form-control">
            <option value="0">-- Select Promotion --</option>
            @foreach (var bean in PromotionList)
            {
                <option value="@bean.Id">@bean.PromoCode</option>
            }
        </InputSelect>
    </div>

    <button @onclick="HandleValidSubmit" id="submitButton">Save</button>
    <button @onclick="CancelEdit">Cancel</button>


    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="error-message">
            @ErrorMessage
        </div>
    }


</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private string? ErrorMessage;
    private int promotionId;

    private List<Promotion> PromotionList = new List<Promotion>();

    protected override async Task OnInitializedAsync()
    {
        PromotionList = await Http.GetFromJsonAsync<List<Promotion>>($"api/Promotion/GetPromotionList");
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            if (promotionId==0)
            {
                ErrorMessage = $"Please choose a discount";
                return;
            }else{
                var response = await Http.PutAsJsonAsync($"api/Item/SelectPromotion/{Id}", promotionId);
                if (response.IsSuccessStatusCode)
                {

                    Navigation.NavigateTo("/item/index");

                }
            }
         
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred: {ex.Message}";
        }
    }

    private void CancelEdit()
    {
        Navigation.NavigateTo("/item/index");
    }
}
